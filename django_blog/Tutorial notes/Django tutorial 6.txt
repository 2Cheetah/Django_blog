To create user page app:
> python manage.py startapp users

---

Add this app to django_blog/settings.py:
INSTALLED_APPS = [
!    'users.apps.UsersConfig',
    'blog.apps.BlogConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

---

To create user form for registration purposes it's needed to modify users/views.py:
from django.shortcuts import render
!from django.contrib.auth.forms import UserCreationForm


!def register(request):
!    form = UserCreationForm()
!    return render(request, 'users/register.html', {'form': form})

---

Create template for register page in users/templates/users/register.html:
{% extends "blog/base.html" %}
{% block content %}
  <div class="content-section">
    <form method="POST">
      {% csrf_token %}
      <fieldset class="form-group">
        <legend class="border-bottom mb-4">Join Today</legend>
        {{ form.as_p }}
      </fieldset>
      <div class="form-group">
        <button class="btn btn-outline-info" type="submit">Sign Up</button>
      </div>
    </form>
    <div class="border-top pt3">
      <small class="text-muted">
        Already have an account? <a class="ml-2" href="#">Sign In</a>
      </small>
    </div>
  </div>
{% endblock content %}

---

Make routes in django_blog/urls.py:
!from users import views as user_views

urlpatterns = [
    path('admin/', admin.site.urls),
!    path('register/', user_views.register, name='register'),
    path('', include('blog.urls'))
]

---

Types of messages:
from django.contrib import messages

message.debug
message.info
message.success
message.warning
message.error

---

To create user using data from register form, create forms.py:
from django import forms
from django.contrib.auth.models import User
from django.contrib.auth.forms import UserCreationForm


class UserRegisterForm(UserCreationForm):
    email = forms.EmailField()

    class Meta:
        model = User
        fields = ['username', 'email', 'password1', 'password2']

---

Modify views.py:
from django.shortcuts import render, redirect
!from .forms import UserRegisterForm
from django.contrib import messages


!def register(request):
    if request.method == 'POST':
        form = UserRegisterForm(request.POST)
        if form.is_valid():
            form.save()
            username = form.cleaned_data.get('username')
            messages.success(request, f'Account created for {username}!')
            return redirect('blog-home')
        else:
            messages.warning(request, 'Please, check entered data.')
    else:
        form = UserRegisterForm()
    return render(request, 'users/register.html', {'form': form})

---

Install CrispyForms to style forms in Bootstrap style:
> pip install django-crispy-forms

Register it in settings.py:
INSTALLED_APPS = [
    'users.apps.UsersConfig',
    'blog.apps.BlogConfig',
!    'crispy_forms',

Add to the end of the file:
CRISPY_TEMPLATE_PACK = 'bootstrap4'

---

Modify register template:
{% extends "blog/base.html" %}
!{% load crispy_forms_tags %}
{% block content %}
  <div class="content-section">
    <form method="POST">
      {% csrf_token %}
      <fieldset class="form-group">
        <legend class="border-bottom mb-4">Join Today</legend>
!        {{ form|crispy }}